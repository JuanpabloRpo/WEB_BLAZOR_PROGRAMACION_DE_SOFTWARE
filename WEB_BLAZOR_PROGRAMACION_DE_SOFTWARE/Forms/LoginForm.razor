@using WEB_BLAZOR_PROGRAMACION_DE_SOFTWARE.Interfaces
@using WEB_BLAZOR_PROGRAMACION_DE_SOFTWARE.Services
@inject UserSessionService session
@inject NavigationManager Navigation
@inject ILoginService loginUser

<div class="login-formulario">
    <h3>LoginForm</h3>
    <p>Ingrese usuario y contraseña</p>

    <input type="text" placeholder="Usuario" @bind-value="usuario" />
    <input type="password" placeholder="Contraseña" @bind-value="password" />
    @if (!usuarioCorrecto)
    {
        <div class="popup" @onclick="CerrarPopup">
            <div class="popup-content" @onclick:stopPropagation>
                <div class="login-formulario">
                    <h1 class="mensaje-error">Usuario incorrecto</h1>
                    <input type="button" value="Cerrar" @onclick="CerrarPopup" />
                </div>
            </div>
        </div>
    }

    <input type="button" value="Iniciar" class="btn btn-success" @onclick="Login" />

</div>


@code {
    private string usuario;
    private string password;
    private bool usuarioCorrecto = true;

    public async Task Login()
    {
        var user = await loginUser.check(usuario, password);
        if (user != null)
        {
            session.IniciarSesion(user);
            Navigation.NavigateTo("/");
        }
        else
        {
            usuarioCorrecto = false;
            StateHasChanged();
        }

    }
    private void CerrarPopup()
    {
        usuarioCorrecto = true;
        StateHasChanged();
    }
}
